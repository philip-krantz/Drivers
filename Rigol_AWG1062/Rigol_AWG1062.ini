# Instrument driver configuration file.

[General settings]

# The name is shown in all the configuration windows
name: Rigol AWG1062

# The version string should be updated whenever changes are made to this config file
version: 0.1

# Name of folder containing the code defining a custom driver. Do not define this item
# or leave it blank for any standard driver based on the built-in VISA interface.
driver_path: Rigol_AWG1062



[Model and options]
# The option section allow instruments with different options to use the same driver

# List of models supported by this driver
model_str_1: DG1062Z

# Check instrument model id at startup (True or False). Default is False
check_model: True

# Valid model strings returned by the instrument. Default value = model_str
# model_id_1:

# Installed options (shown as checkbox controls)

# Check instrument options at startup (True or False). Default is False

# If check_options is set to True, define command for getting options

# If check_options is set to True, supply valid id option strings for each option



# General VISA settings for the instrument.
[VISA settings]

# Enable or disable communication over the VISA protocol (True or False)
# If False, the driver will not perform any operations (unless there is a custom driver).
use_visa = True

# Reset the interface (not the instrument) at startup (True or False).  Default is False
reset: False

# Time (in seconds) before the timing out while waiting for an instrument response. Default is 5
timeout: 5

# Query instrument errors (True or False).  If True, every command sent to the device will
# be followed by an error query.  This is useful when testing new setups, but may degrade
# performance by slowing down the instrument communication. 
query_instr_errors: False 

# Bit mask for checking status byte errors (default is 255, include all errors)
# The bits signal the following errors:
# 0: Operation
# 1: Request control
# 2: Query error
# 3: Device error
# 4: Execution error
# 5: Command error
# 6: User request
# 7: Power on
error_bit_mask: 255

# SCPI string to be used when querying for instrument error messages
error_cmd: :SYST:ERR?

# Initialization commands are sent to the instrument when starting the driver
# *RST will reset the device, *CLS clears the interface
# init: :SYST:ERR:SCPI ON;

# Final commands sent to the instrument when closing the driver
final: 


# Define quantities in sections. This list is a selection of allowed keywords,
# see the manual for a full list of options
#   datatype:      The datatype should be one of DOUBLE, BOOLEAN, COMBO,
#                  STRING, COMPLEX, VECTOR, VECTOR_COMPLEX, PATH or BUTTON.
#   unit:          Quantity unit
#   set_cmd:       Command used to send data to the instrument. Put <*> where the value should appear.
#   get_cmd:       Command used to get the data from the instrument. Default is set_cmd?
#   def_value:     Default value
#   low_lim:       Lowest allowable value.  Defaults to -INF
#   high_lim:      Highest allowable values.  Defaults to +INF
#   combo_def_1:   First option in a pull-down combo box. Only used when datatype=COMBO
#   combo_def_2:   Second option in a pull-down combo box. Only used when datatype=COMBO
#   ...
#   combo_def_n:   nth option in a pull-down combo box. Only used when datatype=COMBO
#   state_quant:   Quantity that determines this control's visibility
#   state_value_1: Value of "state_quant" for which the control is visible
#   state_value_2: Value of "state_quant" for which the control is visible
#   ...
#   state_value_n: Value of "state_quant" for which the control is visible
#   permission:    Sets read/writability, options are BOTH, READ, WRITE or NONE. Default is BOTH 
#   group:         Name of the group where the control belongs.
#   section:       Name of the section where the control belongs.

[Ch1 - voltage]
datatype: DOUBLE
unit: V
low_lim: -10
high_lim: 10
show_in_measurement_dlg: True

[Ch1 - enabled]
datatype: BOOLEAN
def_value: False
set_cmd: OUTP1
show_in_measurement_dlg: True

[Ch2 - voltage]
datatype: DOUBLE
unit: V
low_lim: -10
high_lim: 10
show_in_measurement_dlg: True

[Ch2 - enabled]
datatype: BOOLEAN
def_value: False
set_cmd: OUTP2
show_in_measurement_dlg: True

[Sweep speed]
datatype: DOUBLE
def_value: 0.2
unit: V/s
low_lim: 0
show_in_measurement_dlg: True


; [Frequency]
; unit: Hz
; datatype: DOUBLE
; set_cmd: :SOUR:FREQ

; [Ch 1]
; section: Channel 1
; datatype: VECTOR
; permission: WRITE
; unit: V
; x_name: Time
; x_unit: s
; show_in_measurement_dlg: True

; [Ch 1 - Output]
; section: Channel 1
; datatype: BOOLEAN
; def_value: False
; set_cmd: :OUTP1

; [Ch 1 - Vpp]
; section: Channel 1
; unit: V
; datatype: DOUBLE
; set_cmd: :SOUR1:VOLT:AMPL

; [Ch 1 - Offset]
; section: Channel 1
; unit: V
; datatype: DOUBLE
; set_cmd: :SOUR1:VOLT:OFFS

; [Ch 1 - Burst Mode]
; section: Channel 1
; datatype: BOOLEAN
; def_value: False
; set_cmd: :SOUR1:BURS

; [Ch 1 - Burst Trigger]
; section: Channel 1
; datatype: COMBO
; def_value: Trigered
; combo_def_1: Trigered
; combo_def_2: Infinity
; combo_def_3: Gated
; cmd_def_1: TRIG
; cmd_def_2: INF
; cmd_def_3: GAT
; set_cmd: :SOUR1:BURS:MODE
; state_quant: Ch 1 - Burst Mode
; state_value_1: True

; [Ch 1 - Burst Trigger Source]
; section: Channel 1
; datatype: COMBO
; def_value: Internal
; combo_def_1: Internal
; combo_def_2: External
; combo_def_3: Manual
; cmd_def_1: INT
; cmd_def_2: EXT
; cmd_def_3: MAN
; set_cmd: :SOUR1:BURS:TRIG:SOUR
; state_quant: Ch 1 - Burst Mode
; state_value_1: True

; [Ch 1 - Burst Trigger Slope]
; section: Channel 1
; datatype: COMBO
; def_value: Positive
; combo_def_1: Positive
; combo_def_2: Negative
; cmd_def_1: POS
; cmd_def_2: NEG
; set_cmd: :SOUR1:BURS:TRIG:SLOP
; state_quant: Ch 1 - Burst Mode
; state_value_1: True

; [Ch 1 - Burst Number]
; section: Channel 1
; datatype: DOUBLE
; set_cmd: :SOUR1:BURS:NCYC
; state_quant: Ch 1 - Burst Mode
; state_value_1: True

; [Ch 1 - Trigger]
; section: Channel 1
; datatype: COMBO
; def_value: Internal
; combo_def_1: Internal
; combo_def_2: External
; combo_def_3: Manual
; cmd_def_1: INT
; cmd_def_2: EXT
; cmd_def_3: BUS
; set_cmd: TRIG1:SOUR

; [Ch 2]
; section: Channel 2
; datatype: VECTOR
; permission: WRITE
; unit: V
; x_name: Time
; x_unit: s
; show_in_measurement_dlg: True

; [Ch 2 - Output]
; section: Channel 2
; datatype: BOOLEAN
; def_value: False
; set_cmd: :OUTP2

; [Ch 2 - Vpp]
; section: Channel 2
; unit: V
; datatype: DOUBLE
; set_cmd: :SOUR2:VOLT:AMPL

; [Ch 2 - Offset]
; section: Channel 2
; unit: V
; datatype: DOUBLE
; set_cmd: :SOUR2:VOLT:OFFS

; [Ch 2 - Burst Mode]
; section: Channel 2
; datatype: BOOLEAN
; def_value: False
; set_cmd: :SOUR2:BURS

; [Ch 2 - Burst Trigger]
; section: Channel 2
; datatype: COMBO
; def_value: Trigered
; combo_def_1: Trigered
; combo_def_2: Infinity
; combo_def_3: Gated
; cmd_def_1: TRIG
; cmd_def_2: INF
; cmd_def_3: GAT
; set_cmd: :SOUR2:BURS:MODE
; state_quant: Ch 2 - Burst Mode
; state_value_1: True

; [Ch 2 - Burst Trigger Source]
; section: Channel 2
; datatype: COMBO
; def_value: Internal
; combo_def_1: Internal
; combo_def_2: External
; combo_def_3: Manual
; cmd_def_1: INT
; cmd_def_2: EXT
; cmd_def_3: MAN
; set_cmd: :SOUR2:BURS:TRIG:SOUR
; state_quant: Ch 2 - Burst Mode
; state_value_1: True

; [Ch 2 - Burst Trigger Slope]
; section: Channel 2
; datatype: COMBO
; def_value: Positive
; combo_def_1: Positive
; combo_def_2: Negative
; cmd_def_1: POS
; cmd_def_2: NEG
; set_cmd: :SOUR2:BURS:TRIG:SLOP
; state_quant: Ch 2 - Burst Mode
; state_value_1: True

; [Ch 2 - Burst Number]
; section: Channel 2
; datatype: DOUBLE
; set_cmd: :SOUR2:BURS:NCYC
; state_quant: Ch 2 - Burst Mode
; state_value_1: True

; [Ch 2 - Trigger]
; section: Channel 2
; datatype: COMBO
; def_value: Internal
; combo_def_1: Internal
; combo_def_2: External
; combo_def_3: Manual
; cmd_def_1: INT
; cmd_def_2: EXT
; cmd_def_3: BUS
; set_cmd: TRIG2:SOUR
