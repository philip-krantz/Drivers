  # Instrument driver configuration file.

[General settings]

# The name is shown in all the configuration windows
name: RohdeSchwarz RTP Oscilloscope

# The version string should be updated whenever changes are made to this config file
version: 1.1

# Name of folder containing the code defining a custom driver. Do not define this item
# or leave it blank for any standard driver based on the built-in VISA interface.
driver_path: RohdeSchwarz_RTP_Oscilloscope

# General VISA settings for the instrument.
[VISA settings]

# Enable or disable communication over the VISA protocol (True or False)
# If False, the driver will not perform any operations (unless there is a custom driver).
use_visa = True

# Reset the interface (not the instrument) at startup (True or False).  Default is False
reset: True

# Time (in seconds) before the timing out while waiting for an instrument response. Default is 5
timeout: 200

# Query instrument errors (True or False).  If True, every command sent to the device will
# be followed by an error query.  This is useful when testing new setups, but may degrade
# performance by slowing down the instrument communication. 
query_instr_errors: False 

# Bit mask for checking status byte errors (default is 255, include all errors)
# The bits signal the following errors:
# 0: Operation
# 1: Request control
# 2: Query error
# 3: Device error
# 4: Execution error
# 5: Command error
# 6: User request
# 7: Power on
error_bit_mask: 255

# SCPI string to be used when querying for instrument error messages
error_cmd: :SYST:ERR?

# Initialization commands are sent to the instrument when starting the driver
# *RST will reset the device, *CLS clears the interface, :BAND:VID:AUTO 1
init: *RST

# Boolean string values (used for sending True/False to instrument), default is 1 and 0
#str_true: ON
#str_false: OFF

# Final commands sent to the instrument when closing the driver
# final: 


[Model and options]
# The option section allow instruments with different options to use the same driver

# List of models supported by this driver
# model_str_1: N90xx

# Check instrument model id at startup (True or False). Default is False
# check_model: True

# If check_model is set to True, define command for getting the model (default is *IDN?)
#model_cmd: *IDN?

# Valid model strings returned by the instrument. Default value = model_str
model_id_1: R&S_RTP

# Define quantities in sections. This list is a selection of allowed keywords,
# see the manual for a full list of options
#   datatype:      The datatype should be one of DOUBLE, BOOLEAN, COMBO,
#                  STRING, COMPLEX, VECTOR, VECTOR_COMPLEX, PATH or BUTTON.
#   unit:          Quantity unit
#   set_cmd:       Command used to send data to the instrument. Put <*> where the value should appear.
#   get_cmd:       Command used to get the data from the instrument. Default is set_cmd?
#   def_value:     Default value
#   low_lim:       Lowest allowable value.  Defaults to -INF
#   high_lim:      Highest allowable values.  Defaults to +INF
#   combo_def_1:   First option in a pull-down combo box. Only used when datatype=COMBO
#   combo_def_2:   Second option in a pull-down combo box. Only used when datatype=COMBO
#   ...
#   combo_def_n:   nth option in a pull-down combo box. Only used when datatype=COMBO
#   state_quant:   Quantity that determines this control's visibility
#   state_value_1: Value of "state_quant" for which the control is visible
#   state_value_2: Value of "state_quant" for which the control is visible
#   ...
#   state_value_n: Value of "state_quant" for which the control is visible
#   permission:    Sets read/writability, options are BOTH, READ, WRITE or NONE. Default is BOTH 
#   group:         Name of the group where the control belongs.
#   section:       Name of the section where the control belongs.

#define Acquisition mode.  There are a bunch of dependency issues if both are selected.

#define all settings common to both modes here.

; [UpdateDisplay]
; datatype: COMBO
; def_value: OFF
; combo_def_1: OFF
; combo_def_2: ON
; cmd_def_1: 0
; cmd_def_2: 1
; set_cmd: SYST:DISP:UPD 
; get_cmd: SYST:DISP:UPD?
; group: General Setting
; section: Settings

[REF Clock]
datatype: COMBO
def_value: INT
combo_def_1: INT
combo_def_2: EXT
cmd_def_1: INT
cmd_def_2: EXT
set_cmd: SENS:SOUR
get_cmd: SENS:SOUR?
group: General Setting
section: Settings

[Interpolate]
datatype: COMBO
def_value: sin(x)/x
combo_def_1: linear
combo_def_2: sin(x)/x
combo_def_3: sample hold
cmd_def_1: LIN
cmd_def_2: SINX
cmd_def_3: SMHD
set_cmd: ACQ:INT
get_cmd: ACQ:INT?
group: General Setting
section: Settings

[Sampling Rate]
datatype: DOUBLE
def_value: 20E9
low_lim: 1E6
high_lim: 40E9
set_cmd: ACQ:SRATE
get_cmd: ACQ:SRATE?
group: General Setting
section: Settings
show_in_measurement_dlg: True

[Maximum Acquire Points]
datatype: DOUBLE
def_value: 40e6
low_lim: 1000
high_lim: 800e6
set_cmd: ACQ:SRATE
get_cmd: ACQ:SRATE?
group: General Setting
section: Settings

; [DataFormat]
; datatype: COMBO
; def_value: ascii
; combo_def_1: ascii
; combo_def_2: real32
; combo_def_3: int8
; combo_def_4: int16
; cmd_def_1: ASCii
; cmd_def_2: REAL,32
; cmd_def_3: int,8
; cmd_def_4: int16
; set_cmd: FORMAT:DATA
; get_cmd: FORMAT:DATA?
; group: General Setting
; section: Settings

[AUTO Set]
datatype: BUTTON
set_cmd: AUTOscale
group: General Setting
section: Settings

############  return value
; [Average]
; datatype: Boolean
; def_value: False
; group: General Setting
; section: Settings

; [Average Times]
; datatype: DOUBLE
; def_value: 5
; state_quant: Average
; state_value: True
; group: General Setting
; section: Settings

[Return X value]
datatype: BOOLEAN
def_value: False
combo_def_1: False
combo_def_2: True
cmd_def_1: 0
cmd_def_2: 1
set_cmd: EXP:WAV:INCX
get_cmd: EXP:WAV:INCX?
group: General Setting
section: Settings

########################### Time base and Sampling rate
[Time scale]
unit: s
datatype: DOUBLE
def_value: 10E-9
low_lim: 25e-12
high_lim: 10000
set_cmd: TIMebase:SCALe
get_cmd: TIMebase:SCALe?
group: Timebase
section: Settings
show_in_measurement_dlg: True


[Time Range]
unit: s
datatype: DOUBLE
def_value: 100E-9
low_lim: 250e-12
high_lim: 100000
set_cmd: TIMebase:RANGe
get_cmd: TIMebase:RANGe?
group: Timebase
section: Settings
show_in_measurement_dlg: True

; [Horizontal Divisions]
; datatype: DOUBLE
; def_value: 10
; low_lim: 4
; high_lim: 20
; set_cmd: TIMebase:DIVisions
; get_cmd: TIMebase:DIVisions?
; group: Timebase
; section: Settings
; show_in_measurement_dlg: True

[Horizontal Position]
datatype: DOUBLE
def_value: 0
low_lim: -100E24
high_lim: 100E24
set_cmd: TIMebase:HOR:POS
get_cmd: TIMebase:HOR:POS?
group: Timebase
section: Settings
show_in_measurement_dlg: True


#######################################   Trigger   #########################################

[Trigger Source]
datatype: COMBO
def_value: CHAN1
combo_def_1: CHAN1
combo_def_2: CHAN2
combo_def_3: CHAN3 
combo_def_4: CHAN4
combo_def_5: EXT
cmd_def_1: CHAN1
cmd_def_2: CHAN2
cmd_def_3: CHAN3
cmd_def_4: CHAN4
cmd_def_5: EXT
set_cmd: TRIGger:SOURce
get_cmd: TRIGger:SOURce?
section: Settings
group: Trigger


[Trigger Mode]
datatype: COMBO
def_value: EDGE
combo_def_1: EDGE
combo_def_2: GLITch
combo_def_3: WIDTH
combo_def_4: RUNT
combo_def_5: WINDow
cmd_def_1: EDGE
cmd_def_2: GLITch
cmd_def_3: WIDTH 
cmd_def_4: RUNT
cmd_def_5: WINDow
set_cmd: :TRIGger:TYPE
get_cmd: :TRIGger:TYPE?
section: Settings
group: Trigger

[CHAN1 Trigger Level]
datatype: DOUBLE
def_value: 0
state_quant: Trigger Source
state_value: CHAN1
set_cmd: TRIG:LEVEL1
get_cmd: TRIG:LEVEL1?
section: Settings
group: Trigger


[CHAN2 Trigger Level]
datatype: DOUBLE
def_value: 0
state_quant: Trigger Source
state_value: CHAN2
set_cmd: TRIG:LEVEL2
get_cmd: TRIG:LEVEL2?
section: Settings
group: Trigger


[CHAN3 Trigger Level]
datatype: DOUBLE
def_value: 0
state_quant: Trigger Source
state_value: CHAN3
set_cmd: TRIG:LEVEL3
get_cmd: TRIG:LEVEL3?

[CHAN4 Trigger Level]
datatype: DOUBLE
def_value: 0
state_quant: Trigger Source
state_value: CHAN4
set_cmd: TRIG:LEVEL4
get_cmd: TRIG:LEVEL4?
section: Settings
group: Trigger


[External Trigger Level]
datatype: DOUBLE
def_value: 0
state_quant: Trigger Source
state_value: EXT
set_cmd: TRIG:LEVEL5
get_cmd: TRIG:LEVEL5?
section: Settings
group: Trigger

###########################   channel setting  ######################


[Ch1 - Enabled]
datatype: BOOLEAN
def_value: 0
set_cmd: :CHAN1:STATE
get_cmd: :CHAN1:STATE?
section: Channel Setting
group: Channel1
show_in_measurement_dlg: True

[Ch1 - Coupling]
datatype: COMBO
def_value: DC
combo_def_1: DC
combo_def_2: AC
combo_def_3: DCLimit
cmd_def_1: DC
cmd_def_2: AC
cmd_def_3: DCLimit
set_cmd: :CHAN1:COUP
get_cmd: :CHAN1:COUP?
section: Channel Setting
group: Channel1

[Ch1 - Offset]
datatype: DOUBLE
unit: V
def_value: 0
set_cmd: :CHANnel1:OFFSet 
get_cmd: :CHANnel1:OFFSet? 
section: Channel Setting
group: Channel1

[Ch1 - IMPedance]
datatype: DOUBLE
unit: Ohm
low_lim: 0.1
high_lim: 100E3
def_value: 50
set_cmd: :CHANnel1:IMP
get_cmd: :CHANnel1:IMP? 
section: Channel Setting
group: Channel1

[Ch1 - ARIThmetics]
datatype: COMBO
def_value: OFF
combo_def_1: OFF
combo_def_2: ENVELOPE
combo_def_3: AVERAGE
cmd_def_1: OFF
cmd_def_2: ENVelope
cmd_def_3: AVERage
set_cmd: CHAN1:WAV:ARIT 
get_cmd: CHAN1:WAV:ARIT?
section: Channel Setting
group: Channel1


[Ch1 - Aver_Times]
datatype: DOUBLE
def_value: 3
state_quant: Ch1 - ARIThmetics
state_value: AVERAGE
section: Channel Setting
group: Channel1

#####

[Ch2 - Enabled]
datatype: BOOLEAN
def_value: 0
set_cmd: :CHAN2:STATE
get_cmd: :CHAN2:STATE?
section: Channel Setting
group: Channel2
show_in_measurement_dlg: True

[Ch2 - Coupling]
datatype: COMBO
def_value: DC
combo_def_1: DC
combo_def_2: AC
combo_def_3: DCLimit
cmd_def_1: DC
cmd_def_2: AC
cmd_def_3: DCLimit
set_cmd: :CHAN2:COUP
get_cmd: :CHAN2:COUP?
section: Channel Setting
group: Channel2

[Ch2 - Offset]
datatype: DOUBLE
unit: V
def_value: 0
set_cmd: :CHANnel2:OFFSet 
get_cmd: :CHANnel2:OFFSet? 
section: Channel Setting
group: Channel2

[Ch2 - IMPedance]
datatype: DOUBLE
unit: Ohm
low_lim: 0.1
high_lim: 100E3
def_value: 50
set_cmd: :CHANnel2:IMP
get_cmd: :CHANnel2:IMP? 
section: Channel Setting
group: Channel2

[Ch2 - ARIThmetics]
datatype: COMBO
def_value: OFF
combo_def_1: OFF
combo_def_2: ENVELOPE
combo_def_3: AVERAGE
cmd_def_1: OFF
cmd_def_2: ENVelope
cmd_def_3: AVERage
set_cmd: CHAN2:WAV:ARIT 
get_cmd: CHAN2:WAV:ARIT?
section: Channel Setting
group: Channel2


[Ch2 - Aver_Times]
datatype: DOUBLE
def_value: 3
state_quant: Ch2 - ARIThmetics
state_value: AVERAGE
section: Channel Setting
group: Channel2


[Ch3 - Enabled]
datatype: BOOLEAN
def_value: 0
set_cmd: :CHAN3:STATE
get_cmd: :CHAN3:STATE?
section: Channel Setting
group: Channel3
show_in_measurement_dlg: True

[Ch3 - Coupling]
datatype: COMBO
def_value: DC
combo_def_1: DC
combo_def_2: AC
combo_def_3: DCLimit
cmd_def_1: DC
cmd_def_2: AC
cmd_def_3: DCLimit
set_cmd: :CHAN3:COUP
get_cmd: :CHAN3:COUP?
section: Channel Setting
group: Channel3

[Ch3 - Offset]
datatype: DOUBLE
unit: V
def_value: 0
set_cmd: :CHANnel3:OFFSet 
get_cmd: :CHANnel3:OFFSet? 
section: Channel Setting
group: Channel3


[Ch3 - IMPedance]
datatype: DOUBLE
unit: Ohm
low_lim: 0.1
high_lim: 100E3
def_value: 50
set_cmd: :CHANnel3:IMP
get_cmd: :CHANnel3:IMP? 
section: Channel Setting
group: Channel3

[Ch3 - ARIThmetics]
datatype: COMBO
def_value: OFF
combo_def_1: OFF
combo_def_2: ENVELOPE
combo_def_3: AVERAGE
cmd_def_1: OFF
cmd_def_2: ENVelope
cmd_def_3: AVERage
set_cmd: CHAN3:WAV:ARIT 
get_cmd: CHAN3:WAV:ARIT?
section: Channel Setting
group: Channel3


[Ch3 - Aver_Times]
datatype: DOUBLE
def_value: 3
state_quant: Ch3 - ARIThmetics
state_value: AVERAGE
section: Channel Setting
group: Channel3


[Ch4 - Enabled]
datatype: BOOLEAN
def_value: 0
set_cmd: :CHAN4:STATE
get_cmd: :CHAN4:STATE?
section: Channel Setting
group: Channel4
show_in_measurement_dlg: True

[Ch4 - Coupling]
datatype: COMBO
def_value: DC
combo_def_1: DC
combo_def_2: AC
combo_def_3: DCLimit
cmd_def_1: DC
cmd_def_2: AC
cmd_def_3: DCLimit
set_cmd: :CHAN4:COUP
get_cmd: :CHAN4:COUP?
section: Channel Setting
group: Channel4

[Ch4 - Offset]
datatype: DOUBLE
unit: V
def_value: 0
set_cmd: :CHANnel4:OFFSet 
get_cmd: :CHANnel4:OFFSet? 
section: Channel Setting
group: Channel4

[Ch4 - IMPedance]
datatype: DOUBLE
unit: Ohm
low_lim: 0.1
high_lim: 100E3
def_value: 50
set_cmd: :CHANnel4:IMP
get_cmd: :CHANnel4:IMP? 
section: Channel Setting
group: Channel4

[Ch4 - ARIThmetics]
datatype: COMBO
def_value: OFF
combo_def_1: OFF
combo_def_2: ENVELOPE
combo_def_3: AVERAGE
cmd_def_1: OFF
cmd_def_2: ENVelope
cmd_def_3: AVERage
set_cmd: CHAN4:WAV:ARIT 
get_cmd: CHAN4:WAV:ARIT?
section: Channel Setting
group: Channel4

[Ch4 - Aver_Times]
datatype: DOUBLE
def_value: 3
state_quant: Ch4 - ARIThmetics
state_value: AVERAGE
section: Channel Setting
group: Channel4


#######################   Readout   ######################

[Ch1 - Data]
datatype: VECTOR
permission: READ
x_name: Time
x_unit: s
show_in_measurement_dlg: True
state_quant: Ch1 - Enabled
state_value_1: 1

[Ch2 - Data]
datatype: VECTOR
permission: READ
x_name: Time
x_unit: s
show_in_measurement_dlg: True
state_quant: Ch2 - Enabled
state_value_1: 1

[Ch3 - Data]
datatype: VECTOR
permission: READ
x_name: Time
x_unit: s
show_in_measurement_dlg: True
state_quant: Ch3 - Enabled
state_value_1: 1

[Ch4 - Data]
datatype: VECTOR
permission: READ
x_name: Time
x_unit: s
show_in_measurement_dlg: True
state_quant: Ch4 - Enabled
state_value_1: 1