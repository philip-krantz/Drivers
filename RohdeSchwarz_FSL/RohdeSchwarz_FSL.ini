# Instrument driver configuration file.

[General settings]

# The name is shown in all the configuration windows
name: Rohde&Schwarz FSL

# The version string should be updated whenever changes are made to this config file
version: 0.2

# Name of folder containing the code defining a custom driver. Do not define this item
# or leave it blank for any standard driver based on the built-in VISA interface.
driver_path: RohdeSchwarz_FSL

# default interface and address
interface: TCPIP



[Model and options]
# The option section allow instruments with different options to use the same driver

# List of models supported by this driver
model_str_1: FSL

# Check instrument model id at startup (True or False). Default is False
check_model: True

# Valid model strings returned by the instrument. Default value = model_str
model_id_1: Rohde&Schwarz,FSL


# General VISA settings for the instrument.
[VISA settings]

# Enable or disable communication over the VISA protocol (True or False)
# If False, the driver will not perform any operations (unless there is a custom driver).
use_visa = True

# Reset the interface (not the instrument) at startup (True or False).  Default is False
reset: True

# Time (in seconds) before the timing out while waiting for an instrument response. Default is 5
timeout: 10

# Query instrument errors (True or False).  If True, every command sent to the device will
# be followed by an error query.  This is useful when testing new setups, but may degrade
# performance by slowing down the instrument communication. 
query_instr_errors: False 

# Bit mask for checking status byte errors (default is 255, include all errors)
# The bits signal the following errors:
# 0: Operation
# 1: Request control
# 2: Query error
# 3: Device error
# 4: Execution error
# 5: Command error
# 6: User request
# 7: Power on
error_bit_mask: 255

# SCPI string to be used when querying for instrument error messages
error_cmd: 

# Initialization commands are sent to the instrument when starting the driver
# *RST will reset the device, *CLS clears the interface
init: :INIT:CONT ON;:FORM:BORD NORM;

# Boolean string values (used for sending True/False to instrument), default is 1 and 0
str_true: ON
str_false: OFF

# Final commands sent to the instrument when closing the driver
final: 

# Define quantities in sections. This list is a selection of allowed keywords,
# see the manual for a full list of options
#   datatype:      The datatype should be one of DOUBLE, BOOLEAN, COMBO,
#                  STRING, COMPLEX, VECTOR, VECTOR_COMPLEX, PATH or BUTTON.
#   unit:          Quantity unit
#   set_cmd:       Command used to send data to the instrument. Put <*> where the value should appear.
#   get_cmd:       Command used to get the data from the instrument. Default is set_cmd?
#   def_value:     Default value
#   low_lim:       Lowest allowable value.  Defaults to -INF
#   high_lim:      Highest allowable values.  Defaults to +INF
#   combo_def_1:   First option in a pull-down combo box. Only used when datatype=COMBO
#   combo_def_2:   Second option in a pull-down combo box. Only used when datatype=COMBO
#   ...
#   combo_def_n:   nth option in a pull-down combo box. Only used when datatype=COMBO
#   state_quant:   Quantity that determines this control's visibility
#   state_value_1: Value of "state_quant" for which the control is visible
#   state_value_2: Value of "state_quant" for which the control is visible
#   ...
#   state_value_n: Value of "state_quant" for which the control is visible
#   permission:    Sets read/writability, options are BOTH, READ, WRITE or NONE. Default is BOTH 
#   group:         Name of the group where the control belongs.
#   section:       Name of the section where the control belongs.

##############################
# Group: Horizontal
##############################

[Range type]
datatype: COMBO
def_value: Center - Span
combo_def_1: Center - Span
combo_def_2: Start - Stop
combo_def_3: Single
combo_def_4: List
permission: NONE
group: Horizontal
tooltip: In 'Single' or 'List' mode measurement is performed in zero span. If the span > 0 is set, the function is automatically switched off.

[Start frequency]
datatype: DOUBLE
def_value: 4E9
unit: Hz
set_cmd: :SENS:FREQ:STAR
state_quant: Range type
state_value_1: Start - Stop
group: Horizontal

[Stop frequency]
datatype: DOUBLE
def_value: 12E9
unit: Hz
set_cmd: :SENS:FREQ:STOP
state_quant: Range type
state_value_1: Start - Stop
group: Horizontal

[Center frequency]
datatype: DOUBLE
def_value: 8E9
unit: Hz
set_cmd: :SENS:FREQ:CENT
state_quant: Range type
state_value_1: Center - Span
group: Horizontal

[Span]
datatype: DOUBLE
def_value: 8E9
unit: Hz
set_cmd: :SENS:FREQ:SPAN
state_quant: Range type
state_value_1: Center - Span
group: Horizontal

[# of points]
datatype: DOUBLE
def_value: 201
low_lim: 101
high_lim: 32001
set_cmd: :SENS:SWE:POIN
state_quant: Range type
state_value_1: Start - Stop
state_value_2: Center - Span
group: Horizontal

[Frequency]
datatype: DOUBLE
unit: Hz
state_quant: Range type
state_value_1: Single
group: Horizontal

[List point 1]
datatype: DOUBLE
def_value: 7E9
unit: Hz
state_quant: Range type
state_value_1: List
group: Horizontal

[List point 2]
datatype: DOUBLE
def_value: 8E9
unit: Hz
state_quant: Range type
state_value_1: List
group: Horizontal

[List point 3]
datatype: DOUBLE
def_value: 9E9
unit: Hz
state_quant: Range type
state_value_1: List
group: Horizontal

##############################
# Group: Amplitude
##############################

[Reference level]
datatype: DOUBLE
def_value: -20
low_lim: -130
high_lim: 20
unit: dBm
set_cmd: DISP:TRAC:Y:RLEV
group: Amplitude
tooltip: Maximum value the AD converter can handle. Signal levels above this value will not be measured correctly, which is indicated by the IFOVL status display.

[auto RF input attenuation]
datatype: BOOLEAN
def_value: True
set_cmd: INP:ATT:AUTO
state_quant: Range type
state_value_1: Start - Stop
state_value_2: Center - Span
group: Amplitude

[RF input attenuation]
datatype: DOUBLE
def_value: 0
low_lim: 0
high_lim: 30
unit: dB
set_cmd: INP:ATT
state_quant: auto RF input attenuation
state_value_1: False
group: Amplitude
tooltip: Set in 5 dB steps.

[RF input attenuation (zero span)]
label: RF input attenuation
datatype: DOUBLE
def_value: 0
low_lim: 0
high_lim: 30
unit: dB
state_quant: Range type
state_value_1: Single
state_value_2: List
group: Amplitude
tooltip: Set in 5 dB steps.

##############################
# Group: Bandwidth
##############################

[Res bandwidth]
datatype: DOUBLE
def_value: 1E6
unit: Hz
set_cmd: :SENS:BAND:RES
group: Bandwidth
tooltip: Bandwidth of intermediate frequency filter, controlling frequency resolution. \nFiner, slower.

[auto Video bandwidth]
datatype: BOOLEAN
def_value: True
set_cmd: BAND:VID:AUTO
state_quant: Range type
state_value_1: Start - Stop
state_value_2: Center - Span
group: Bandwidth
tooltip: Defaultly 3*RBW.

[Video bandwidth]
datatype: DOUBLE
def_value: 3e6
low_lim: 1
high_lim: 1e7
unit: Hz
set_cmd: BAND:VID
state_quant: auto Video bandwidth
state_value_1: False
group: Bandwidth
tooltip: Smaller, slower, more smooth.

[Video bandwidth (zero span)]
label: Video bandwidth
datatype: DOUBLE
def_value: 3e6
low_lim: 1
high_lim: 1e7
unit: Hz
state_quant: Range type
state_value_1: Single
state_value_2: List
group: Bandwidth

[Measurement time]
datatype: DOUBLE
def_value: 10e-3
low_lim: 1e-6
high_lim: 16000
unit: s
group: Bandwidth
state_quant: Range type
state_value_1: Single
state_value_2: List
tooltip: the SWT on front panel.

; [Filter type]
; datatype: COMBO
; def_value: NORM
; combo_def_1: NORM
; set_cmd: BAND:TYPE
; group: Bandwidth


##############################
# Group: Trace
##############################

[Average]
datatype: BOOLEAN
def_value: False
set_cmd: :SENS:AVER
state_quant: Range type
state_value_1: Start - Stop
state_value_2: Center - Span
group: Trace

[# of averages]
datatype: DOUBLE
def_value: 10
low_lim: 1
high_lim: 32767
set_cmd: :SENS:AVER:COUN
state_quant: Range type
state_value_1: Start - Stop
state_value_2: Center - Span
group: Trace

[Wait for new trace]
datatype: BOOLEAN
def_value: False
state_quant: Range type
state_value_1: Start - Stop
state_value_2: Center - Span
group: Trace

##############################
# Results
##############################

[Signal]
x_name: Frequency
x_unit: Hz
unit: dBm
datatype: VECTOR
permission: READ
state_quant: Range type
state_value_1: Start - Stop
state_value_2: Center - Span

[Measured power]
unit: dBm
datatype: DOUBLE
permission: READ
state_quant: Range type
state_value_1: Single
tooltip: RMS power in measuring time with zero span mode.

[List values]
x_name: List frequencies
x_unit: Hz
unit: dBm
datatype: VECTOR
permission: READ
state_quant: Range type
state_value_1: List
